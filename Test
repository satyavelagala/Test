
/****** Object:  StoredProcedure [dbo].[SP_Sync_ReportVersions]    Script Date: 14/06/2022 13:20:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
============================================================
CREATED BY : Reddy Velagala
Created ON : 14 Jun 2022
Purpose    : To sync the report versions
============================================================
*/
ALTER PROCEDURE [dbo].[SP_Sync_ReportVersions]
as
begin

DECLARE @Analytical_Model_LatestVersionId INT, @Outdated_ReportVersion_Ids Varchar(max) ='',@LatestReportIdsForOutDateReports varchar(max)=''
,@OutDatedModel_ReportVersion_Ids varchar(max)=''

SELECT @Analytical_Model_LatestVersionId = analytical_model_Id
FROM TEST.analytical_model_version
WHERE ACTIVE='Y' and latest = 'Y'


/* Finding the existing reports but not matching with Report Version */

SELECT @Outdated_ReportVersion_Ids = isnull(@Outdated_ReportVersion_Ids,'') + Convert(varchar,Rv.report_id) +','
	  ,@LatestReportIdsForOutDateReports = isnull(@LatestReportIdsForOutDateReports,'') + convert(varchar,R.ReportId) + ','
FROM (	

		  select t.ReportId,t.FullReportName,t.ComponentName,t.ReportVersion,t.ReportVersionNumber,t.ReportName
		  from (
			select ReportId, reportname as FullReportName,right(reportName,charindex('_',reportname,0)-1) As ComponentName
				   ,SUBSTRING(reportName,charindex('_',reportname,0)+1,4) as ReportVersion
				   ,Cast(Replace(SUBSTRING(reportName,charindex('_',reportname,0)+1,4),'V','') as real) as ReportVersionNumber
				,right(reportname,charindex('_',reverse(reportname),0)-1) as ReportName
				,Row_Number() over(partition by right(reportname,charindex('_',reverse(reportname),0)-1),right(reportName,charindex('_',reportname,0)-1) 
									order by Cast(Replace(SUBSTRING(reportName,charindex('_',reportname,0)+1,4),'V','') as real) desc) as SNO
			 from test.reports
			 ) t
	         where t.sno = 1
     ) R
Inner Join Test.Report_Version RV ON (R.ReportName = Rv.report_name and cast(replace(Rv.report_version,'v','') as real)< R.ReportVersionNumber )
inner join test.component_version C on (Rv.component_Id = C.component_id) 
Where RV.active ='Y' and rv.latest='Y' and C.component_code = R.ComponentName


/* Finding the Reports which are having with previous version Model */
SELECT @OutDatedModel_ReportVersion_Ids = @OutDatedModel_ReportVersion_Ids +  + Convert(varchar,report_id) +','
FROM TEST.report_version
WHERE analytical_model_Id < @Analytical_Model_LatestVersionId and active='Y' and latest='Y' 

Update Test.Report_Version
SET end_date = gETDATE(),Active='N',Latest='N'
WHERE REPORT_ID IN (SELECT * FROM DBO.FN_SPLIT(@Outdated_ReportVersion_Ids,','))

Update Test.report_version
set end_date = gETDATE(),Active='N',Latest='N'
where REPORT_ID IN (SELECT * FROM DBO.FN_SPLIT(@OutDatedModel_ReportVersion_Ids,','))

/*Finding the new reports which are available in reports table but not in Report_Version table */

INSERT INTO TEST.report_version(report_name,report_version,start_date,active,latest,component_Id,analytical_model_Id)
SELECT R.ReportName,R.ReportVersion,GETDATE(),'Y','Y',R.component_id,@Analytical_Model_LatestVersionId
FROM (	

		  select t.ReportId,t.FullReportName,t.ComponentName,t.ReportVersion,t.ReportVersionNumber,t.ReportName,t.component_id
		  from (
			select ReportId, reportname as FullReportName,right(reportName,charindex('_',reportname,0)-1) As ComponentName
				   ,SUBSTRING(reportName,charindex('_',reportname,0)+1,4) as ReportVersion
				   ,Cast(Replace(SUBSTRING(reportName,charindex('_',reportname,0)+1,4),'V','') as real) as ReportVersionNumber
				,right(reportname,charindex('_',reverse(reportname),0)-1) as ReportName,cv.component_id
				,Row_Number() over(partition by right(reportname,charindex('_',reverse(reportname),0)-1),right(reportName,charindex('_',reportname,0)-1) 
									order by Cast(Replace(SUBSTRING(reportName,charindex('_',reportname,0)+1,4),'V','') as real) desc) as SNO
			 from test.reports tr
			  inner join test.component_version cv on (right(reportName,charindex('_',reportname,0)-1) = cv.component_code)			
			 ) t
	         where t.sno = 1
     ) R
Left Outer Join (select trv.report_id,trv.report_name,trv.report_version,CV.component_id,cv.component_code
				 from Test.Report_Version TRV
				 inner join test.component_version CV on (CV.component_id = TRV.component_Id)
				) RV ON (R.ReportName = Rv.report_name and R.ReportVersion = Rv.report_version and Rv.component_code = r.ComponentName)
Where RV.report_id is null 

/*Inserting new report version records for outdated model report records */
INSERT INTO TEST.report_version(report_name,report_version,start_date,active,latest,component_Id,analytical_model_Id)
SELECT R.ReportName,R.ReportVersion,GETDATE(),'Y','Y',R.component_id,@Analytical_Model_LatestVersionId
FROM ( select t.ReportId,t.FullReportName,t.ComponentName,t.ReportVersion,t.ReportVersionNumber,t.ReportName,t.component_id
		from (
		select ReportId, reportname as FullReportName,right(reportName,charindex('_',reportname,0)-1) As ComponentName
				,SUBSTRING(reportName,charindex('_',reportname,0)+1,4) as ReportVersion
				,Cast(Replace(SUBSTRING(reportName,charindex('_',reportname,0)+1,4),'V','') as decimal) as ReportVersionNumber
			,right(reportname,charindex('_',reverse(reportname),0)-1) as ReportName,cv.component_id
			,Row_Number() over(partition by right(reportname,charindex('_',reverse(reportname),0)-1),right(reportName,charindex('_',reportname,0)-1) 
								order by Cast(Replace(SUBSTRING(reportName,charindex('_',reportname,0)+1,4),'V','') as real) desc) as SNO
			from test.reports tr
			inner join test.component_version cv on (right(reportName,charindex('_',reportname,0)-1) = cv.component_code)			
			) t
	        where t.sno = 1
	 ) R
Inner Join (
            select report_id,report_name,cv.component_id,report_version,cv.component_code
			from Test.Report_Version ORV
			Inner Join Test.component_version CV on (ORV.component_Id = CV.component_id)
			WHERE Report_id in (
								select * from dbo.fn_split(@OutDatedModel_ReportVersion_Ids,',')
							   )
			) ORP On (ORP.Report_Name  = R.ReportName and ORP.component_code = R.ComponentName and orp.report_version <= r.ReportVersion)
Left Outer Join  (select trv.report_id,trv.report_name,trv.report_version,CV.component_id,cv.component_code,trv.analytical_model_Id
				 from Test.Report_Version TRV
				 inner join test.component_version CV on (CV.component_id = TRV.component_Id)
				) RV ON (R.ReportName = Rv.report_name and R.ReportVersion = Rv.report_version
				        and Rv.component_code = r.ComponentName and RV.analytical_model_Id = @Analytical_Model_LatestVersionId)				
Where RV.report_id is null 






end
